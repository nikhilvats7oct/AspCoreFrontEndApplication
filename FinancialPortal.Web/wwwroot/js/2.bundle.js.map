{"version":3,"sources":["webpack:///./app/js/budget-summary/pie-chart.js","webpack:///./app/js/budget-summary/_config-afforable.js","webpack:///./app/js/budget-summary/_config-unaffordable.js","webpack:///./app/js/budget-summary/_config-negative.js"],"names":["dataConfig","pieOutcome","income","salary","benefits","other","activeIncome","outgoings","household","expenditure","recommended","leftover","activeOutgoings","centerIndex","element","configAffordable","configUnaffordable","configNegative","Math","updateIncome","updateOutgoings","ctx","document","triggerPieInfo","window","Chart","type","data","options","responsive","legendCallback","legendHtml","item","chart","i","legend","display","tooltips","enabled","animation","animateScale","animateRotate","_showCenter","cutoutPercentage","t","index","datasetsIndex","$this","e","$thisVal","_calcFromMonthly","parseFloat","_getFormattedFrequency","updatePieData","checkifColorIsDark","backgroundColor","color","label","frequency","number","labels","datasets","borderWidth","borderColor","hoverBackgroundColor","hoverBorderWidth","hoverBorderColor","overBudget"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;AAEA;;;;AACA;;;;AACA;;;;;;;;kBAEe,YAAM;AACjB,QAAIA,kBAAJ;AAAA,QACIC,aADJ;AAAA,QAEIC,SAAS;AACLC,gBADK;AAELC,kBAFK;AAGLC,eAAO;AAHF,KAFb;AAAA,QAOIC,eAPJ;AAAA,QAQIC,YAAY;AACRC,mBADQ;AAERC,qBAFQ;AAGRJ,eAHQ;AAIRK,qBAJQ;AAKRC,kBAAU;AALF,KARhB;AAAA,QAeIC,kBAfJ;AAAA,QAgBIC,mBAhBJ;;AAkBA;AACA,kEAA0C,0BAAoB;AAC1DC,wBAAgBA,iBAAiBZ,OAAOY,QAAxCA,IAAiCZ,CAAjCY;AACAZ,eAAOY,QAAPZ,QAAuBY,QAAvBZ;AAFJ;AAIA,qEAA6C,0BAAoB;AAC7DY,wBAAgBA,iBAAiBP,UAAUO,QAA3CA,IAAiCP,CAAjCO;AACAP,kBAAUO,QAAVP,QAA0BO,QAA1BP;AAFJ;;AAKA,YAAO,kEAAP,GAAO,EAAP;AACI;AACA;AACIP,yBAAae,kBAAbf;AACAC;AACA;AACJ;AACA;AACIA;AACAD,yBAAagB,qBAAbhB;AACA;AACJ;AACA;AACIA,yBAAaiB,iBAAbjB;AACAO,iCAAqBW,SAASX,UAA9BA,QAAqBW,CAArBX;AAdR;;AAiBAM,kBAAcb,0BAAda,WAAcb,CAAda;;AAEAM;AACAC;;AAEA,QAAMC,MAAMC,wBAAZ,SAAYA,CAAZ;;AAEA,aAAS;AACLD,yCAAiC,aAAO;AACpCE,2BAAevB,uCAAfuB,WAAevB,CAAfuB,EAAoEvB,kBAApEuB,WAAoEvB,CAApEuB,EAAoGvB,4BAApGuB,WAAoGvB,CAApGuB;AADJF;;AAIAG,4BAAoB,IAAIC,QAAJ,aAAe;AAC/BC,kBAD+B;AAE/BC,kBAF+B;AAG/BC,qBAAS;AACLC,4BADK;AAELC,gCAAgB,+BAAiB;;AAE7B,wBAAIC,aAAJ;AACAA;AACA,wBAAIC,OAAOC,oBAAX,CAAWA,CAAX;AACA,yBAAK,IAAIC,IAAT,GAAgBA,IAAIF,UAApB,aAA2C;AACvCD;AACAA,wCAAgB,uDAAuDC,qBAAvD,CAAuDA,CAAvD,GAAhBD;AACAA,wCAAgB,0CAA0CE,kBAA1C,CAA0CA,CAA1C,uBAAqFD,UAArF,CAAqFA,CAArF,GAAhBD;AACAA;AACH;;AAEDA;AACA,2BAAOA,gBAAP,EAAOA,CAAP;AAfC;AAiBLI,wBAAQ;AACJC,6BAAS;AADL,iBAjBH;AAoBLC,0BAAU;AACNC,6BAAS;AADH,iBApBL;AAuBLC,2BAAW;AACPC,kCADO;AAEPC,mCAFO;AAAA,sDAGM;AACTC;AACH;AALM,iBAvBN;AA8BLC,kCA9BK;AAAA,gDA+BS;AACV,wBAAIC,EAAJ,QAAc;AACV,4BAAIC,QAAQD,KAAZ;AAAA,4BACIE,gBAAgBF,KADpB;;AAGA,4BAAI5C,4BAAJ,IAAoC;AAChCuB,2CAAevB,mDAAfuB,KAAevB,CAAfuB,EAA0EvB,kBAA1EuB,KAA0EvB,CAA1EuB,EAAoGvB,wCAApGuB,KAAoGvB,CAApGuB;AACH;AACJ;AAvCA;AAAA,gDAyCS;AACV,wBAAIqB,EAAJ,QAAc;AACV,4BAAIC,QAAQD,KAAZ;AAAA,4BACIE,gBAAgBF,KADpB;;AAGA,4BAAI5C,4BAAJ,IAAoC;AAChCuB,2CAAevB,mDAAfuB,KAAevB,CAAfuB,EAA0EvB,kBAA1EuB,KAA0EvB,CAA1EuB,EAAoGvB,wCAApGuB,KAAoGvB,CAApGuB;AACH;AACJ;AACJ;AAlDI;AAHsB,SAAf,CAApBC;;AAyDA,oDAAwBA,kBAAxB,cAAwBA,EAAxB;AACH;;AAED,+DAAuC,aAAO;AAC1C,YAAIuB,QAAQ,sBAAEC,EAAd,aAAY,CAAZ;AAAA,YACIC,WAAWF,MADf,GACeA,EADf;;AAGA,sDAA0B,MACtBG,iBACIC,WAAW,wEADfD,GACe,EAAXC,CADJD,oBADJ,CACIA,CADJ;AAMA,uDAA2B,MACvBA,iBACIC,WAAW,uEADfD,GACe,EAAXC,CADJD,oBADJ,CACIA,CADJ;AAMA,0DAA8B,MAC1BA,iBACIC,WAAW,yEADfD,GACe,EAAXC,CADJD,oBADJ,CACIA,CADJ;;AAOA,0DAA8BE,uBAA9B,QAA8BA,CAA9B;;AAEAjC;AACAC;AACAiC;AACA9B,uBAAevB,uCAAfuB,WAAevB,CAAfuB,EAAoEvB,kBAApEuB,WAAoEvB,CAApEuB,EAAoGvB,4BAApGuB,WAAoGvB,CAApGuB;AACA,oDAAwBC,kBAAxB,cAAwBA,EAAxB;AA7BJ;;AAgCA;AACA,2DAAuD;AACnD,YAAI8B,qBAAqB,yBAAzB,eAAyB,CAAzB;;AAEA,YAAIA,mBAAJ,MAAIA,EAAJ,EAAiC;AAC7B,wDAAwB;AACpBC,iCADoB;AAEpBC,uBAAO;AAFa,aAAxB;AADJ,eAKO;AACH,wDAAwB;AACpBD,iCADoB;AAEpBC,uBAAO;AAFa,aAAxB;AAIH;;AAED,wDAA4BC,QAA5B;;AAEA,YAAI,eAAeA,SAAnB,aAAyC;AACrC,0DAA0B,OAAON,0BAAjC,CAAiCA,CAAjC;AADJ,eAEO;AACH,0DAA0B,MAAMA,0BAAhC,CAAgCA,CAAhC;AACH;AACJ;;AAED,4BAA6C;AAAA,YAAvBO,YAAuB,oEAAX,SAAW;;AACzC,aAAK,IAAL,gBAAyB;AACrBpD,iCAAqB4C,iBAAiBC,WAAWjD,OAA5BgD,IAA4BhD,CAAXiD,CAAjBD,qBAArB5C,CAAqB4C,CAArB5C;AACH;;AAED,wDAA4B,MAAMA,aAAlC;AACA,0DAA8B,MAAMA,aAApC;AACA,uDAA2B,MAAMA,aAAjC;AACH;;AAED,+BAAgD;AAAA,YAAvBoD,YAAuB,oEAAX,SAAW;;AAC5C,aAAK,IAAL,mBAA4B;AACxB9C,oCAAwBsC,iBAAiBC,WAAW5C,UAA5B2C,IAA4B3C,CAAX4C,CAAjBD,qBAAxBtC,CAAwBsC,CAAxBtC;AACH;;AAED,YAAG,CAAH,YAAgB;AACZA,2CAA+BsC,iBAAiBC,WAAW,wEAA5BD,GAA4B,EAAXC,CAAjBD,qBAA/BtC,CAA+BsC,CAA/BtC;AACAA,4CAAgCsC,iBAAiBC,WAAW,yEAA5BD,GAA4B,EAAXC,CAAjBD,qBAAhCtC,CAAgCsC,CAAhCtC;AACA,iEAAiC,OAAOA,gBAAxC;AAHJ,eAKK;AACD,iEAAiC,MAAMA,gBAAvC;AACH;;AAED,8DAAkC,MAAMA,gBAAxC;AACA,gEAAoC,MAAMA,gBAA1C;AACA,0DAA8B,MAAMA,gBAApC;AACA,gEAAoC,MAAMA,gBAA1C;AACH;;AAED,6BAAyB;AACrBY;;AAEA,wBAAe;AACXA,oDAAwC,mBAAY;AAChDV;AACAA,kCACIF,gBADJE,WAEIF,gBAFJE;;AAKA,oBAAGqC,WAAWvC,gBAAXuC,eAAH,GAAgD;AAC5CrC,sCAAkBF,gBAAlBE;AACH;;AAEDA,kCAAkBF,gBAAlBE;AAXJU;AADJ,eAeK;AACDA,oDAAwC,mBAAY;AAChDV;;AAEA,oBAAGA,iBAAH,YAAgC;AAC5BA,sCACIF,gBADJE,cAEIF,gBAFJE;AADJ,uBAMK;AACDA,4CAGIF,gBAHJE,WAIIF,gBAJJE;AAMH;AAhBLU;AAkBH;;AAED;AACAA;AACH;;;AAGL;;;AACA,uBAAuB;AACnB;AACH;;AAED,6CAA6C;AAAA,gCACD,aADC,oBACD,GADC;AAAA;AAAA;AAAA;;AAGzC;AACI;AACI;AACJ;AACI,mBAAOmC,SAAP;AACJ;AACI,mBAAOA,SAAP;AACJ;AACA;AACI,mBAAOA,SAAP;AATR;AAWH;;AAED,2CAA2C;AACvC;AACI;AACI;AACJ;AACI;AACJ;AACI;AACJ;AACA;AACI;AATR;AAWH,C;;;;;;;;;;;;;;ACpSD;;;;;;;;AAEA,IAAIpD,YAAJ;;AAEA,IAAG,kEAAH,GAAG,EAAH,EAAwD;AACpD,qEAA6C,0BAAoB;AAC7DA,uBAAeO,QAAfP;AADJ;AAGH;;kBAGc;AACXqD,YAAQ,6BADG,WACH,CADG;AAMXC,cAAU,CAAC;AACPlC,cADO;AAEP4B,yBAAiB,uBAFV,SAEU,CAFV;AAOPE,eAAO,CAPA,WAOA,CAPA;AAUPK,qBAVO;AAWPC,qBAAa,uBAXN,SAWM,CAXN;AAgBPC,8BAAsB,uBAhBf,SAgBe,CAhBf;AAqBPC,0BArBO;AAsBPC,0BAAkB;AAtBX,KAAD;AANC,C;;;;;;;;;;;;;;ACXf;;;;;;;;AAEA,IAAI3D,YAAJ;;AAEA,IAAG,kEAAH,GAAG,EAAH,EAAwD;AACpD,qEAA6C,0BAAoB;AAC7DA,uBAAeO,QAAfP;AADJ;AAGH;;kBAEc;AACXqD,YAAQ,6BADG,WACH,CADG;AAMXC,cAAU,CAAC;AACPlC,cADO;AAEP4B,yBAAiB,uBAFV,SAEU,CAFV;AAOPE,eAAO,CAPA,WAOA,CAPA;AAUPK,qBAVO;AAWPC,qBAAa,uBAXN,SAWM,CAXN;AAgBPC,8BAAsB,uBAhBf,SAgBe,CAhBf;AAqBPC,0BArBO;AAsBPC,0BAAkB;AAtBX,KAAD;AANC,C;;;;;;;;;;;;;;ACVf;;;;;;;;AAEA,IAAIC,aAAJ;AAAA,IACI5D,YADJ;;AAGA,IAAG,kEAAH,GAAG,EAAH,EAAwD;AACpD4D,oBAAgB,wEAAhBA,GAAgB,EAAhBA;AACAA,oBAAgB,yEAAhBA,GAAgB,EAAhBA;;AAEA;AACA5D;;AAEA,qEAA6C,0BAAoB;AAC7D;AACA,YAAGO,gBAAH,YAA+B;AAC3B;AACH;AACDP,uBAAeO,QAAfP;AALJ;AAOH;;kBAEc;AACXqD,YAAQ,+BADG,aACH,CADG;AAOXC,cAAU,CAAC;AACPlC,cADO;AAEP4B,yBAAiB,YAFV,aAEU,CAFV;AAMPE,eAAO,CANA,UAMA,CANA;AASPO,8BAAsB,YATf,aASe,CATf;AAaPF,qBAbO;AAcPC,qBAAa,YAdN,aAcM,CAdN;AAkBPE,0BAlBO;AAmBPC,0BAAkB;AAnBX,KAAD,EAwBV;AACIvC,cADJ;AAEI4B,yBAAiB,0CAFrB,SAEqB,CAFrB;AAQIE,eAAO,CARX,WAQW,CARX;AAWIK,qBAXJ;AAYIC,qBAAa,0CAZjB,SAYiB,CAZjB;AAkBIC,8BAAsB,0CAlB1B,SAkB0B,CAlB1B;AAwBIC,0BAxBJ;AAyBIC,0BAAkB;AAzBtB,KAxBU,EAwDV;AACIvC,cADJ;AAEI4B,yBAAiB,0CAFrB,SAEqB,CAFrB;AAQIE,eAAO,CARX,WAQW,CARX;AAWIK,qBAXJ;AAYIC,qBAAa,0CAZjB,SAYiB,CAZjB;AAkBIC,8BAAsB,0CAlB1B,SAkB0B,CAlB1B;AAwBIC,0BAxBJ;AAyBIC,0BAAkB;AAzBtB,KAxDU,EAwFV;AACIvC,cADJ;AAEI4B,yBAAiB,0CAFrB,SAEqB,CAFrB;AAQIE,eAAO,CARX,WAQW,CARX;AAWIK,qBAXJ;AAYIC,qBAAa,0CAZjB,SAYiB,CAZjB;AAkBIC,8BAAsB,0CAlB1B,SAkB0B,CAlB1B;AAwBIC,0BAxBJ;AAyBIC,0BAAkB;AAzBtB,KAxFU;AAPC,C","file":"2.bundle.js","sourcesContent":["import $ from 'jquery';\r\nimport Chart from 'chart.js';\r\nimport tinycolor from 'tinycolor2';\r\n\r\nimport {getDurationConstants} from '../_helpers';\r\n\r\nimport configAffordable from './_config-afforable';\r\nimport configUnaffordable from './_config-unaffordable';\r\nimport configNegative from './_config-negative';\r\n\r\nexport default () => {\r\n    let dataConfig,\r\n        pieOutcome = false,\r\n        income = {\r\n            salary: 0,\r\n            benefits: 0,\r\n            other: 0\r\n        },\r\n        activeIncome = {},\r\n        outgoings = {\r\n            household: 0,\r\n            expenditure: 0,\r\n            other: 0,\r\n            recommended: 0,\r\n            leftover: 0\r\n        },\r\n        activeOutgoings = {},\r\n        centerIndex;\r\n\r\n    // Setup \r\n    $('.js-chart-settings-income input').each((index, element) => {\r\n        element.value = element.value || income[element.name];\r\n        income[element.name] = element.value;\r\n    });\r\n    $('.js-chart-settings-outgoings input').each((index, element) => {\r\n        element.value = element.value || outgoings[element.name];\r\n        outgoings[element.name] = element.value;\r\n    });\r\n\r\n    switch($('.js-chart-settings input[name=\"outcome\"]').val()) {\r\n        case 'affordable':\r\n        case 'postive':\r\n            dataConfig = configAffordable;\r\n            pieOutcome = true;\r\n            break;\r\n        case 'unaffordable':\r\n        case 'not-reccomended':\r\n            pieOutcome = true;\r\n            dataConfig = configUnaffordable;\r\n            break;\r\n        case 'negative':\r\n        default:\r\n            dataConfig = configNegative;\r\n            outgoings.leftover = Math.abs(outgoings.leftover);\r\n    }\r\n    \r\n    centerIndex = dataConfig.labels.indexOf('Left over');\r\n\r\n    updateIncome();\r\n    updateOutgoings();\r\n\r\n    const ctx = document.getElementById('myChart');\r\n\r\n    if (ctx) {\r\n        ctx.addEventListener('mouseout', (e) => {\r\n            triggerPieInfo(dataConfig.datasets[0].backgroundColor[centerIndex], dataConfig.labels[centerIndex], dataConfig.datasets[0].data[centerIndex]);\r\n        });\r\n\r\n        window.myDoughnut = new Chart(ctx, {\r\n            type: 'doughnut',\r\n            data: dataConfig,\r\n            options: {\r\n                responsive: true,\r\n                legendCallback: function (chart) {\r\n\r\n                    var legendHtml = [];\r\n                    legendHtml.push('<ul class=\"list-inline\" style=\"display: inline-flex; list-style:none; position: absolute; top: 0; width: 100%; justify-content: space-around;\" >');\r\n                    var item = chart.data.datasets[0];\r\n                    for (var i = 0; i < item.data.length; i++) {\r\n                        legendHtml.push('<li class=\"list-inline-item\" style=\"margin-right: 10px; text-align: center;\" >');\r\n                        legendHtml.push('<div class=\"chart-legend\" style=\"background-color:' + item.backgroundColor[i] + '; height:20px; width:20px; margin: 0 auto;\"></div>');\r\n                        legendHtml.push('<div class=\"chart-legend-label-text\">' + chart.data.labels[i] + '<br/> <strong>£' + item.data[i] + '</strong></div>');\r\n                        legendHtml.push('</li>');\r\n                    }\r\n\r\n                    legendHtml.push('</ul>');\r\n                    return legendHtml.join(\"\");\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                tooltips: {\r\n                    enabled: false\r\n                },\r\n                animation: {\r\n                    animateScale: true,\r\n                    animateRotate: true,\r\n                    onComplete() {\r\n                        _showCenter();\r\n                    },\r\n                },\r\n                cutoutPercentage: 50,\r\n                onHover(e, t) {\r\n                    if (t.length) {\r\n                        let index = t[0]._index,\r\n                            datasetsIndex = t[0]._datasetIndex;\r\n\r\n                        if (dataConfig.labels[index] != '') {\r\n                            triggerPieInfo(dataConfig.datasets[datasetsIndex].backgroundColor[index], dataConfig.labels[index], dataConfig.datasets[datasetsIndex].data[index]);\r\n                        }\r\n                    }\r\n                },\r\n                onClick(e, t) {\r\n                    if (t.length) {\r\n                        let index = t[0]._index,\r\n                            datasetsIndex = t[0]._datasetIndex;\r\n\r\n                        if (dataConfig.labels[index] != '') {\r\n                            triggerPieInfo(dataConfig.datasets[datasetsIndex].backgroundColor[index], dataConfig.labels[index], dataConfig.datasets[datasetsIndex].data[index]);\r\n                        }\r\n                    }\r\n                },\r\n            }\r\n        });\r\n\r\n        $('.chart-legend').html(window.myDoughnut.generateLegend());\r\n    }\r\n\r\n    $('.js-budget-frequency').on('change', (e) => {\r\n        let $this = $(e.currentTarget),\r\n            $thisVal = $this.val();\r\n\r\n        $('.js-spare-money').text('£' +\r\n            _calcFromMonthly(\r\n                parseFloat($('.js-chart-settings input[name=\"monthly-spare\"]').val()),\r\n                $thisVal\r\n            ).toFixed(2)\r\n        );\r\n        $('.js-income-total').text('£' + \r\n            _calcFromMonthly(\r\n                parseFloat($('.js-chart-settings input[name=\"income-total\"]').val()), \r\n                $thisVal\r\n            ).toFixed(2)\r\n        );\r\n        $('.js-outgoings-total').text('£' + \r\n            _calcFromMonthly(\r\n                parseFloat($('.js-chart-settings input[name=\"outgoing-total\"]').val()), \r\n                $thisVal\r\n            ).toFixed(2)\r\n        );\r\n\r\n        $('.js-money-frequency').text(_getFormattedFrequency($thisVal));\r\n\r\n        updateIncome($thisVal);\r\n        updateOutgoings($thisVal);\r\n        updatePieData();\r\n        triggerPieInfo(dataConfig.datasets[0].backgroundColor[centerIndex], dataConfig.labels[centerIndex], dataConfig.datasets[0].data[centerIndex]);\r\n        $('.chart-legend').html(window.myDoughnut.generateLegend());\r\n    });\r\n\r\n    // Public Functions\r\n    function triggerPieInfo(backgroundColor, label, price) {\r\n        let checkifColorIsDark = tinycolor(backgroundColor);\r\n\r\n        if (checkifColorIsDark.isDark()) {\r\n            $('.js-chart-info').css({\r\n                backgroundColor: backgroundColor,\r\n                color: 'white'\r\n            });\r\n        } else {\r\n            $('.js-chart-info').css({\r\n                backgroundColor: backgroundColor,\r\n                color: 'black'\r\n            });\r\n        }\r\n\r\n        $('.js-chart-heading').text(label + ':');\r\n\r\n        if (!pieOutcome && label == 'Left over') {\r\n            $('.js-chart-price').text('-£' + parseFloat(price).toFixed(2));\r\n        } else {\r\n            $('.js-chart-price').text('£' + parseFloat(price).toFixed(2));\r\n        }\r\n    }\r\n\r\n    function updateIncome(frequency = 'monthly') {\r\n        for (let elem in income) {\r\n            activeIncome[elem] = _calcFromMonthly(parseFloat(income[elem]), frequency).toFixed(2);\r\n        }\r\n\r\n        $('.js-income-salary').text('£' + activeIncome.salary);\r\n        $('.js-income-benefits').text('£' + activeIncome.benefits);\r\n        $('.js-income-other').text('£' + activeIncome.other);\r\n    }\r\n\r\n    function updateOutgoings(frequency = 'monthly') {\r\n        for (let elem in outgoings) {\r\n            activeOutgoings[elem] = _calcFromMonthly(parseFloat(outgoings[elem]), frequency).toFixed(2);\r\n        }\r\n\r\n        if(!pieOutcome) {\r\n            activeOutgoings.monthlySpare = _calcFromMonthly(parseFloat($('.js-chart-settings input[name=\"monthly-spare\"]').val()), frequency).toFixed(2);\r\n            activeOutgoings.outgoingTotal = _calcFromMonthly(parseFloat($('.js-chart-settings input[name=\"outgoing-total\"]').val()), frequency).toFixed(2);\r\n            $('.js-outgoings-leftover').text('-£' + activeOutgoings.leftover);\r\n        }\r\n        else {\r\n            $('.js-outgoings-leftover').text('£' + activeOutgoings.leftover);\r\n        }\r\n\r\n        $('.js-outgoings-household').text('£' + activeOutgoings.household);\r\n        $('.js-outgoings-expenditure').text('£' + activeOutgoings.expenditure);\r\n        $('.js-outgoings-other').text('£' + activeOutgoings.other);\r\n        $('.js-outgoings-recommended').text('£' + activeOutgoings.recommended);   \r\n    }\r\n\r\n    function updatePieData() {\r\n        window.myDoughnut.options.animation.duration = 375;\r\n\r\n        if(pieOutcome) {\r\n            window.myDoughnut.data.datasets.forEach((element) =>{\r\n                element.data = [];\r\n                element.data.push(\r\n                    activeOutgoings.household,\r\n                    activeOutgoings.expenditure,\r\n                );\r\n\r\n                if(parseFloat(activeOutgoings.recommended) > 0) {\r\n                    element.data.push(activeOutgoings.recommended);\r\n                }\r\n\r\n                element.data.push(activeOutgoings.leftover);\r\n            });\r\n        }\r\n        else {\r\n            window.myDoughnut.data.datasets.forEach((element) =>{\r\n                element.data = [];\r\n\r\n                if(element.label == 'Overflow') {\r\n                    element.data.push(\r\n                        activeOutgoings.monthlySpare,\r\n                        activeOutgoings.outgoingTotal\r\n                    );\r\n                }\r\n                else {\r\n                    element.data.push(\r\n                        0,\r\n                        0,\r\n                        activeOutgoings.household,\r\n                        activeOutgoings.expenditure,\r\n                    );\r\n                }\r\n            });\r\n        }\r\n\r\n        $('.js-chart').removeClass('chart--is-animating');\r\n        window.myDoughnut.update();\r\n    }\r\n}\r\n\r\n// Private Functions\r\nfunction _showCenter() {\r\n    $('.js-chart').addClass('chart--is-animating');\r\n}\r\n\r\nfunction _calcFromMonthly(number, frequency) {\r\n    const { week, fortnight, every4week } = getDurationConstants();\r\n\r\n    switch (frequency) {\r\n        case 'monthly':\r\n            return number;\r\n        case 'weekly':\r\n            return number / week;\r\n        case 'fortnightly':\r\n            return number / fortnight;\r\n        case '4week':\r\n        case 'every 4 weeks':\r\n            return number / every4week;\r\n    }\r\n}\r\n\r\nfunction _getFormattedFrequency(frequency) {\r\n    switch (frequency) {\r\n        case 'monthly':\r\n            return 'month';\r\n        case 'weekly':\r\n            return 'week';\r\n        case 'fortnightly':\r\n            return 'fortnight';\r\n        case '4week':\r\n        case 'every 4 weeks':\r\n            return 'every 4th week';\r\n    }\r\n}","import $ from 'jquery';\r\n\r\nlet outgoings = [];\r\n\r\nif($('.js-chart-settings input[name=\"outcome\"]').val()) {\r\n    $('.js-chart-settings-outgoings input').each((index, element) => {\r\n        outgoings.push(element.value);\r\n    });\r\n}\r\n\r\n\r\nexport default {\r\n    labels: [\r\n        \"Household\", \r\n        \"Expenditure\",\r\n        \"Left over\",\r\n    ],\r\n    datasets: [{\r\n        data: outgoings,\r\n        backgroundColor: [\r\n            \"#86CBE3\", \r\n            \"#696E72\", \r\n            \"#CFEAF4\",\r\n        ],\r\n        label: [\r\n            'Outgoings'\r\n        ],\r\n        borderWidth: 1,\r\n        borderColor: [\r\n            \"#86CBE3\",\r\n            \"#696E72\",\r\n            \"#CFEAF4\",\r\n        ],\r\n        hoverBackgroundColor: [\r\n            \"#86CBE3\",\r\n            \"#696E72\",\r\n            \"#CFEAF4\",\r\n        ],\r\n        hoverBorderWidth: 1,\r\n        hoverBorderColor: [\r\n            \"#86CBE3\",\r\n            \"#696E72\",\r\n            \"#CFEAF4\",\r\n        ],\r\n    }]\r\n};","import $ from 'jquery';\r\n\r\nlet outgoings = [];\r\n\r\nif($('.js-chart-settings input[name=\"outcome\"]').val()) {\r\n    $('.js-chart-settings-outgoings input').each((index, element) => {\r\n        outgoings.push(element.value);\r\n    });\r\n}\r\n\r\nexport default {\r\n    labels: [\r\n        \"Household\", \r\n        \"Expenditure\", \r\n        \"Left over\",\r\n    ],\r\n    datasets: [{\r\n        data: outgoings,\r\n        backgroundColor: [\r\n            \"#86CBE3\",\r\n            \"#696E72\",\r\n            \"#CB490D\",\r\n        ],\r\n        label: [\r\n            'Outgoings'\r\n        ],\r\n        borderWidth: 1,\r\n        borderColor: [\r\n            \"#86CBE3\",\r\n            \"#696E72\",\r\n            \"#CB490D\",\r\n        ],\r\n        hoverBackgroundColor: [\r\n            \"#86CBE3\",\r\n            \"#696E72\",\r\n            \"#CB490D\",\r\n        ],\r\n        hoverBorderWidth: 1,\r\n        hoverBorderColor: [\r\n            \"#86CBE3\",\r\n            \"#696E72\",\r\n            \"#CB490D\",\r\n        ],\r\n    }]\r\n};","import $ from 'jquery';\r\n\r\nlet overBudget = [],\r\n    outgoings = [];\r\n\r\nif($('.js-chart-settings input[name=\"outcome\"]').val()) {\r\n    overBudget.push($('.js-chart-settings input[name=\"monthly-spare\"]').val());\r\n    overBudget.push($('.js-chart-settings input[name=\"outgoing-total\"]').val());\r\n\r\n    // Empty values to match with the over budget dataset\r\n    outgoings.push(0, 0);\r\n\r\n    $('.js-chart-settings-outgoings input').each((index, element) => {\r\n        // Skip over leftover and recommended\r\n        if(element.name == 'leftover') {\r\n            return;\r\n        }\r\n        outgoings.push(element.value);\r\n    });\r\n}\r\n\r\nexport default {\r\n    labels: [\r\n        \"Left over\", \r\n        \"\", \r\n        \"Household\", \r\n        \"Expenditure\", \r\n    ],\r\n    datasets: [{\r\n        data: overBudget,\r\n        backgroundColor: [\r\n            \"#CB490D\", \r\n            \"transparent\", \r\n        ],\r\n        label: [\r\n            'Overflow'\r\n        ],\r\n        hoverBackgroundColor: [\r\n            \"#CB490D\", \r\n            \"transparent\", \r\n        ],\r\n        borderWidth: 1,\r\n        borderColor: [\r\n            \"#CB490D\", \r\n            \"transparent\", \r\n        ],\r\n        hoverBorderWidth: 1,\r\n        hoverBorderColor: [\r\n            \"#CB490D\", \r\n            \"transparent\", \r\n        ],\r\n    },\r\n    {\r\n        data: outgoings,\r\n        backgroundColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n        label: [\r\n            'Outgoings'\r\n        ],\r\n        borderWidth: 1,\r\n        borderColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n        hoverBackgroundColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n        hoverBorderWidth: 1,\r\n        hoverBorderColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n    },\r\n    {\r\n        data: outgoings,\r\n        backgroundColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n        label: [\r\n            'Outgoings'\r\n        ],\r\n        borderWidth: 1,\r\n        borderColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n        hoverBackgroundColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n        hoverBorderWidth: 1,\r\n        hoverBorderColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n    },\r\n    {\r\n        data: outgoings,\r\n        backgroundColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n        label: [\r\n            'Outgoings'\r\n        ],\r\n        borderWidth: 1,\r\n        borderColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n        hoverBackgroundColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n        hoverBorderWidth: 1,\r\n        hoverBorderColor: [\r\n            'transparent',\r\n            'transparent',\r\n            \"#86CBE3\",\r\n            \"#696E72\", \r\n        ],\r\n    }]\r\n};"],"sourceRoot":""}